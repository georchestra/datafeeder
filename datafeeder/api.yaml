openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://localhost:8080/
info:
  title: DataFeeder API
  description: This API covers dataset upload and publishing features of the application
  version: "1.0.0"
  contact:
    email: psc@georchestra.org
tags:
  - name: File Upload
    description: 'API to control jobs related to form based file upload of geospatial datasets'
  - name: Data Publishing
    description: 'API to control jobs related to publishing geospatial datasets previously uploaded'

paths:
  /upload:
    post:
      tags:
        - File Upload
      description: Upload one or multiple files to the server, and get a handle to the job.
                   Once the files are uploaded, the analysis process is automatically triggered. Its status can be polled with GET /upload/{jobId}
      operationId: uploadFiles
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        200:
          $ref: '#/components/responses/UploadStatusResponse'
        401:
          description: 'Not authenticated'
        403:
          description: 'Forbidden. User has no priviledges to upload files'
    get:
      tags:
        - File Upload
      description: 'Poll the status of all the upload jobs owned by the calling user'
      operationId: findUserUploadJobs
      responses:
        200:
          $ref: '#/components/responses/UploadStatusResponseList'
        401:
          description: 'Not authenticated'
        403:
          description: 'Forbidden. User has no priviledges to query other users jobs'

  /upload/all:
    get:
      tags:
        - File Upload
      description: 'Poll the status of all the upload jobs. Access restricted to administrators'
      operationId: findAllUploadJobs
      responses:
        200:
          $ref: '#/components/responses/UploadStatusResponseList'
        401:
          description: 'Not authenticated'
        403:
          description: 'Forbidden. User has no priviledges to upload files'
  
  /upload/{jobId}:
    get:
      tags:
        - File Upload
      description: 'Poll the status of a given upload job by id'
      operationId: findUploadJob
      parameters:
      - $ref: '#/components/parameters/jobId'
      responses:
        200:
          $ref: '#/components/responses/UploadStatusResponse'
        401:
          description: 'Not authenticated'
        403:
          description: 'Forbidden. User has no priviledges access the requested job'
    delete:
      tags:
        - File Upload
      description: 'Remove a job and all its resources (e.g. temporary files). Does not unpublish. Use abort=true to abort a running analysis or publishing job'
      operationId: removeJob
      parameters:
      - $ref: '#/components/parameters/jobId'
      - name: abort
        in: query
        description: If true, abort the dataset analysis or publishing, if running. Defaults to false
        required: false
        schema:
          type: boolean
          default: false
      responses:
        204:
          description: 'Job removed.'
        401:
          description: 'Not authenticated'
        403:
          description: 'Forbidden. User has no priviledges access the requested job'
        409:
          description: 'Conflict. The abort=true parameter was not provided and the analysis or publishing job is running'

  /upload/{jobId}/{typeName}/sampleFeature:
    get:
      tags:
        - File Upload
      operationId: getSampleFeature
      description: Obtain a sample dataset feature in GeoJSON format, optionally specifying a feature index, crs, and/or dataset's character encoding.
                   The response encoding is always UTF-8. The 'encoding' parameter can be used to force reading the native data in a different charset.
      parameters:
      - $ref: '#/components/parameters/jobId'
      - $ref: '#/components/parameters/typeName'
      - name: featureIndex
        in: query
        description: Optional feature index, if unspecified, the first feature (index 0) is returned
        required: false
        schema:
          type: integer
          format: int32
          minimum: 0
      - name: encoding
        in: query
        description: Optional, force dataset encoding
        required: false
        schema:
          type: string
      - name: srs
        in: query
        description: Optional, coordinate reference system (e.g. 'EPSG:3857')
        required: false
        schema:
          type: string
      - name: srs_reproject
        in: query
        description: Optional, whether to reproject from the native CRS to the one provided in the srs parameter. If false or not provided, the srs parameter overrides the native CRS
        required: false
        schema:
          type: boolean
          default: false
      responses:
        202:
          $ref: '#/components/responses/SampleFeatureResponse'
        400:
          description: 'Bad request. Some parameter is not acceptable or missing'
        401:
          description: 'Not authenticated'
        403:
          description: 'Forbidden. User has no priviledges access the requested job'

  /upload/{jobId}/publish:
    post:
      tags:
        - Data Publishing
      description: 'Publish the dataset(s) from the given upload'
      operationId: publish
      parameters:
      - $ref: '#/components/parameters/jobId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishRequest'
      responses:
        202:
          $ref: '#/components/responses/PublishStatusResponse'
        400:
          description: 'Bad request. Some parameter is not acceptable or missing'
        401:
          description: 'Not authenticated'
        403:
          description: 'Forbidden. User has no priviledges access the requested job'
        409:
          description: 'Conflict. The upload is not ready for publishing.'
    put:
      tags:
        - Data Publishing
      description: 'Save a draft state for the publication of the dataset(s) from the given upload'
      operationId: saveDraft
      parameters:
      - $ref: '#/components/parameters/jobId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishRequest'
      responses:
        202:
          $ref: '#/components/responses/PublishStatusResponse'
        400:
          description: 'Bad request. Some parameter is not acceptable or missing'
        401:
          description: 'Not authenticated'
        403:
          description: 'Forbidden. User has no priviledges access the requested job'
        409:
          description: 'Conflict. The upload is not ready for publishing.'
    get:
      tags:
        - Data Publishing
      description: 'Poll the publishing staus of the given job'
      operationId: getPublishingStatus
      parameters:
      - $ref: '#/components/parameters/jobId'
      responses:
        200:
          $ref: '#/components/responses/PublishStatusResponse'
        400:
          description: 'Bad request. Some parameter is not acceptable or missing'
        401:
          description: 'Not authenticated'
        403:
          description: 'Forbidden. User has no priviledges access the requested job'

components:
  parameters:
    jobId:
      name: jobId
      in: path
      description: Unique job identifier
      required: true
      schema:
        type: string
        format: uuid
    typeName:
      name: typeName
      in: path
      description: Feature type name
      required: true
      schema:
        type: string
  responses:
    UploadStatusResponseList:
      description: Processing status of a list of dataset upload job
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UploadJobStatus'
    UploadStatusResponse:
      description: Processing status of a dataset upload job
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UploadJobStatus'
    PublishStatusResponse:
      description: Processing status of a dataset publishing job
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PublishJobStatus'
    SampleFeatureResponse:
      description: Sample feature for an uploaded dataset
      content:
        application/geo+json:
          schema:
            type: object
  schemas:
    UploadJobStatus:
      type: object
      description: Describes the status of processing a dataset upload
      properties:
        jobId:
          type: string
          format: uuid
          description: Identifier for the upload processing job
        progress:
          description: Estimated completion progress, from 0 to 1.
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
          default: 0.0
        status:
          type: string
          enum: [PENDING, ANALYZING, DONE, ERROR]
          description: aggregate of status of all datasets in the upload package. If any dataset status is PENDING, ANALYZING, or ERROR, that's the job's status.
                       If at least one dataset status is ERROR, then the job status is ERROR. If no datasets where recognized in the upload, status is ERROR. 
        error:
          type: string
          description: short description of the error that prevents the job to complete successfully
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/DatasetUploadStatus'

    DatasetUploadStatus:
      type: object
      description: Describes a recognized uploaded dataset
      properties:
        name:
          type: string
          description: Name of the dataset in the uploaded package
        status:
          type: string
          enum: [PENDING, ANALYZING, DONE, ERROR]
        error:
          type: string
          description: short description of the error that prevents the dataset to be analysed
        featureCount:
          type: integer
          format: int32
          description: Number of features in the dataset
        sampleProperties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
        sampleGeometryWKT:
          type: string
          description: Well Known Text representation of an exemplar geometry extracted from the dataset
        nativeBounds:
          $ref: '#/components/schemas/BoundingBox'
        encoding:
          type: string
          description: detected charset
    
    Property:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        type:
          type: string

    CRS:
      type: object
      description: Coordinate Reference System
      properties:
        srs:
          type: string
          description: Coordinate Reference System's EPSG identifier.
                       Can be null if a matching reference system couldn't be found in the EPSG database. 
        wkt:
          type: string
          description: Coordinate Reference System's Well Known Text representation. Despite the 'srs' identifier being found or not, the WKT representation is still available.
    BoundingBox:
      type: object
      properties:
        crs:
          $ref: '#/components/schemas/CRS'
        minx:
          type: number
          format: double
        maxx:
          type: number
          format: double
        miny:
          type: number
          format: double
        maxy:
          type: number
          format: double

    PublishRequest:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/DatasetPublishRequest'

    DatasetPublishRequest:
      type: object
      properties:
        nativeName:
          type: string
        publishedName:
          type: string
        title:
          type: string
        abstract:
          type: string
        encoding:
          type: string
        tags:
          type: array
          items:           
            type: string
        crs:
          description: Optional, Coordinate Reference System to publish the dataset in
          $ref: '#/components/schemas/CRS'
        creationDate:
          description: Dataset creation date, in RFC3339 format
          type: string
          format: date
          example: 2017-07-21
        scale:
          description: Optional, scale the data was created for (e.g. 500000 for a 1:500000 scale)
          type: number
          format: double
          example: 25000
        creationProcessDescription:
          type: string

    PublishJobStatus:
      type: object
      description: Describes the processing status of a publishing job for a given upload
      properties:
        jobId:
          type: string
          format: uuid
          description: Identifier for the upload processing job
        progress:
          description: Estimated completion progress, from 0 to 1.
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
          default: 0.0
        status:
          type: string
          enum: [PENDING, RUNNING, DONE, ERROR]
        error:
          type: string
          description: short description of the error that prevents the job to complete successfully
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/DatasetPublishingStatus'

    DatasetPublishingStatus:
      type: object
      description: Describes the status of publishing a given dataset
      properties:
        nativeName:
          type: string
          description: Name of the dataset in the uploaded package
        publishedName:
          type: string
          description: Name of the dataset in the uploaded package
        title:
          type: string
        status:
          type: string
          enum: [PENDING, IMPORTING, PUBLISHING, DONE, ERROR]
        error:
          type: string
          description: short description of the error that prevents the dataset to be published
